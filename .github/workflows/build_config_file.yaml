name: Build Config File
on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  build-config-file:
    name: Build Config File
    runs-on: ubuntu-22.04
    if: "!contains(github.event.head_commit.message, 'Bump version to ')"
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # 3.3.0
      - name: gather versions from '.tool-versions'
        uses: endorama/asdf-parse-tool-versions@v1
        id: versions
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies if cache does not exist
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install Project
        run: poetry install --no-interaction

      - name: Run Tests
        run: |
          source .venv/bin/activate
          pytest tests/

      - name: build
        run: |
          make output/adaptive_bed_mesh.cfg

      - name: upload
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # 3.1.2
        with:
          name: adaptive_bed_mesh.cfg
          path: output/adaptive_bed_mesh.cfg
